<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tblbuy">
    <!-- SQL 매퍼, 실행할 SQL 만 모아놓은 파일
        1) DML INSERT, UPDATE, DELETE, SELECT 와 동일한 태그에 작성하기
        2) DAO 메소드에서 지정했던 메소드의 인자, 리턴타입 정하기
            주의 : 자바 객체의 변수(속성)명과 파라미터 이름을 동일하게 해야합니다
                파라미터가 Map 일 때는 key 이름과 파라미터 이름을 동일하게 합니다.
                기본 형식, String 은 변수 선언 키워드와 동일하게 합니다.
        3) dto(또는 vo) 클래스는 커스텀 생성자를 사용하고, 컬럼명과 변수명 순서를 같게 합니다.
        4) namespace, id 속성값은 개발자가 정합니다
     -->
    <select id="selectAll" resultType="BuyDto">
        SELECT buy_idx, customid, pcode, quantity, buy_date FROM tbl_buy ORDER BY buy_date desc
    </select>

    <!-- insert, update, delete 는 리턴타입 지정안합니다(그래도 값은 리턴해줍니다) -->
    <insert id="insert" parameterType="BuyDto">
        insert into tbl_buy
        values(buy_pk_seq.nextval, #{customid}, #{pcode}, #{quantity}, sysdate)
    </insert>

    <update id="update" parameterType="java.util.Map">
        update tbl_buy
        set quantity = #{quantity}
        where buy_idx = #{buy_idx}
    </update>

    <delete id="delete" parameterType="int">
        delete from tbl_buy
        where buy_idx = #{buy_idx}
    </delete>

    <select id="selectBuyMyPage" parameterType="String" resultType="CustomerBuyDto">
        SELECT buy_idx, tb.pcode, pname, price, quantity, buy_date
        FROM TBL_BUY tb
        JOIN TBL_PRODUCT tp
        ON tb.PCODE  = tp.PCODE
        WHERE tb.CUSTOMID = #{customid}
        ORDER BY BUY_DATE desc
    </select>

    <select id="selectBuyByCustomid" parameterType="String" resultType="BuyDto">
        SELECT buy_idx, customid, pcode, quantity, buy_date
        FROM tbl_buy
        WHERE CUSTOMID = #{customid}
    </select>


</mapper>


